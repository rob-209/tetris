from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from datetime import datetime

class RecordsHandler:
    def __init__(self, records_manager):
        self.records_manager = records_manager
    
    async def show_records(self, update, context, message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–∞–±–ª–∏—Ü—É —Ä–µ–∫–æ—Ä–¥–æ–≤"""
        top_records = self.records_manager.get_top_records(10)
        
        text = "üèÜ **–¢–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤**\n\n"
        
        if top_records:
            for i, record in enumerate(top_records, 1):
                medal = "ü•á" if i == 1 else "ü•à" if i == 2 else "ü•â" if i == 3 else f"{i}."
                # –û–±—Ä–µ–∑–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ –∏–º–µ–Ω–∞
                name = record['first_name']
                if len(name) > 15:
                    name = name[:15] + "..."
                text += f"{medal} {name} - **{record['score']}** –æ—á–∫–æ–≤\n"
        else:
            text += "üéØ –ü–æ–∫–∞ –Ω–µ—Ç —Ä–µ–∫–æ—Ä–¥–æ–≤! –°—Ç–∞–Ω—å—Ç–µ –ø–µ—Ä–≤—ã–º!\n"
        
        text += f"\nüë• –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: {len(self.records_manager.records)}"
        
        keyboard = [
            [InlineKeyboardButton("üìä –ú–æ—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="my_stats")],
            [InlineKeyboardButton("üéÆ –ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data="play_game")],
            [InlineKeyboardButton("‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        
        try:
            await message.edit_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')
        except Exception as e:
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ, —É–ø—Ä–æ—â–∞–µ–º –µ–≥–æ
            simplified_text = "üèÜ **–¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤**\n\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:"
            await message.edit_text(simplified_text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')
    
    async def show_user_stats(self, update, context, message, user):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
        stats = self.records_manager.get_user_stats(user.id)
        
        text = f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä–æ–∫–∞** {user.first_name}\n\n"
        text += f"‚≠ê **–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç:** **{stats['best_score']}** –æ—á–∫–æ–≤\n"
        text += f"üéØ **–ü–æ—Å–ª–µ–¥–Ω—è—è –∏–≥—Ä–∞:** {stats['last_score']} –æ—á–∫–æ–≤\n"
        
        if stats['rank']:
            text += f"üèÖ **–ú–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ:** {stats['rank']}\n"
        else:
            text += f"üèÖ **–ú–µ—Å—Ç–æ –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ:** –Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ\n"
        
        text += f"üéÆ **–°—ã–≥—Ä–∞–Ω–æ –∏–≥—Ä:** {max(stats['games_played'], 1)}\n"
        text += f"üë• **–í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤:** {stats['total_players']}"
        
        if stats['best_score'] == 0:
            text += "\n\nüéØ –£ –≤–∞—Å –µ—â–µ –Ω–µ—Ç —Ä–µ–∫–æ—Ä–¥–∞! –°—ã–≥—Ä–∞–π—Ç–µ –ø–µ—Ä–≤—É—é –∏–≥—Ä—É!"
        
        keyboard = [
            [InlineKeyboardButton("üéÆ –ò–≥—Ä–∞—Ç—å", callback_data="play_game")],
            [InlineKeyboardButton("üèÜ –¢–∞–±–ª–∏—Ü–∞ —Ä–µ–∫–æ—Ä–¥–æ–≤", callback_data="show_records")],
            [InlineKeyboardButton("‚Ü©Ô∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")]
        ]
        
        try:
            await message.edit_text(text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')
        except Exception as e:
            # –£–ø—Ä–æ—â–∞–µ–º —Ç–µ–∫—Å—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
            simplified_text = f"üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞** {user.first_name}\n\n–õ—É—á—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç: **{stats['best_score']}** –æ—á–∫–æ–≤"
            await message.edit_text(simplified_text, reply_markup=InlineKeyboardMarkup(keyboard), parse_mode='Markdown')